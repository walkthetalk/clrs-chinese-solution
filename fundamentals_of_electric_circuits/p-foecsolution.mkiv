%D \module
%D   [     file=p-foecsolution,
%D      version=2014.05.01,
%D        title=\CONTEXT\ User Module,
%D     subtitle=foecsolution,
%D       author=Yi Qingliang,
%D         date=\currentdate,
%D    copyright=Yi Qingliang,
%D        email=niqingliang2003@gmail.com,
%D      license=Public Domain]

\writestatus{loading}{ConTeXt User Module / foecsolution}
\startmodule[foecsolution]

\define\prdname{《电路基础》習題彙編}

\setupinteraction[
  state=start,
  color=blue,
  contrastcolor=blue,
  style=bold,
  title={《电路基础》習題彙編},
  author={倪慶亮},
  subtitle={《电路基础》習題彙編},
  keyword=电路基础 笔记,
]

% use custom phys-dim for custom padding
\usemodule[p][phys-dim]

% use \unit with space
\def\sunit{\dosingleempty\dosunit}
\unexpanded\def\dosunit[#1]#2{%
  \doifelse{#1}{lr}{%
    {\;}\unit{#2}{\;}%
  }{%
    \doifelse{#1}{l}{%
      {\;}\unit{#2}%
    }{%
      \doifelse{#1}{r}{%
        \unit{#2}{\;}%
      }{%
        \unit{#2}%
      }%
    }%
  }%
}

\registerunit[unit][
  cent=cent%
]

\def\munit{\dosingleempty\domunit}
\unexpanded\def\domunit[#1]#2{%
\ifmmode%
  \iffirstargument\sunit[#1]{#2}\else\sunit{#2}\fi%
\else%
  \math{\iffirstargument\sunit[#1]{#2}\else\sunit{#2}\fi}%
\fi%
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% for figure %%%%%%%%%%%%%%%%%%%%%%%%%%
\setupfloat[figure][location=middle]
\setupexternalfigures[location=global,directory={fig}]

\definefloat[afigure][afigures]
\setuplabeltext[en][afigure={Answer Figure\;,}]
\setupcaption[afigure][
  headstyle=\rmx\bf,
  style=\rmx\bf,
  conversion=numbers,
  way=bychapter,
  prefixsegments=chapter,
]

\startMPinclusions
%
\stopMPinclusions

\defineMPinstance
  [schematic]
  [metafun] % needs to be inherited from the global metafun instance
  [textstyle={\switchtobodyfont[6pt]}]

\startluacode
function commands.fixCounter(dst)
	local dstN = string.match(dst, '.*[^0-9]([0-9]*)')
	tex.sprint(tex.ctxcatcodes, tostring(tonumber(dstN)-1))
end
\stopluacode
\define[2]\fixCounter{
\setcounter[#1][%
\ctxlua{commands.fixCounter([==[#2]==])}%
]}%


%%%%%%%%%%%%%%%%%%%%%%%% figure combination %%%%%%%%%%%%%%%%%%%%%%%
% NOTE: because we can't use \processcommalist or \dorecurse in
%       combination, we implement it with a loop in lua code.
\definecombination[figcomb][%
  alternative=label%
]
\setuplabel[combination:figcomb][
    headstyle=\tfx,
    text=,
    numberconversion=character,
    stopper={)},
]
\startluacode
function commands.figComb(cp, postlist, figname)
	if postlist ~= "" then
		tex.sprint(tex.ctxcatcodes, "\\startcombination[figcomb]["..cp.."]")
		for w in string.gmatch(postlist, "%a+") do
			tex.sprint(tex.ctxcatcodes, "{\\externalfigure[" .. figname.."."..w..".pdf]}")
		end
		tex.sprint(tex.ctxcatcodes, "\\stopcombination")
	else
		tex.sprint(tex.ctxcatcodes, "\\externalfigure["..figname..".pdf]")
	end
end
\stopluacode

% schematic figure for question
\def\placefigq{\dodoubleempty\doplacefigq}
\def\doplacefigq[#1][#2]#3#4{
  \fixCounter{figure}{#3}
  \placefigure[force][fig:#3]{for \refq{#4}}{
    \ctxlua{commands.figComb([==[#1]==],[==[#2]==],[==[#3]==])}
  }
}

% schematic figure for answer
\def\placefiga{\dodoubleempty\doplacefiga}
\def\doplacefiga[#1][#2]#3{
  \placeafigure[force][afig:#3]{for \refq{#3}}{
    \ctxlua{commands.figComb([==[#1]==],[==[#2]==],[==[a#3]==])}
  }
}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% for enum %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% NOTE: if you want to use specific font:
% \definefontsynonym [MartinVogel] [marvosym.ttf]
% \definesymbol [Sun]                [\getnamedglyphdirect{MartinVogel}{Sun}]
\definesymbol [1] [*]
\definesymbol [2] [-]


\defineenumeration[Q][
  text={Problem},
  right={:\,},
  headstyle=\rm\bf,	%normal bold slanted boldslanted type cap small... command
  %headcolor=red,
  %style=\rm\bf,		%normal bold slanted boldslanted type cap small... command
  %color=red,	%name
  width=fit,	%fit broad dimension
  distance=0em,		%dimension
%sample	text
  %align=flushleft,	%flushleft middle flushright
  %margin=no,	%standard yes no dimension
  alternative=serried,	%left right top serried inmargin inleft inright hanging
  %hang=2,		%fit broad number
%headcommand	command
%before	command
%inbetween={\startEnglish},	%command
%after={\stopEnglish},	%command
%indentnext	yes no
%indenting	never not no yes always first next
  prefix=yes,
  prefixsegments=chapter, %chapter:section
  prefixconnector={.},
  numberstopper={},
  way=bychapter,
]

\define[1]\refq{%
\in{Problem}{}[Q:#1]%
}

\definestartstop[A][%
  before={\startcolor[black]},
  after={\stopcolor},
]

% no number
\defineitemgroup[IG][levels=2]
\setupitemgroup[IG]
[1]
[a, packed,joinedup,broad]
%standard broad serried packed unpacked stopper joinedup atmargin inmargin autointro loose repeat section paragraph intext random columns
%standard: default setup
%n*broad:  extra horizontal white space after symbol
%n*serried:little horizontal white space after symbol
%packed:   no whitespace between items
%stopper:  punctuation after item separator
%joinedup: no white space before and after itemization
%atmargin: item separator at the margin
%inmargin: item separator in margin
[
%margin=2em,	%no standard dimension
  leftmargin=2em,	%no standard dimension
%rightmargin	no standard dimension
  %width=2em,	%dimension
%distance	dimension
%factor	number
%items	number
%start	number
  before=,	%command
  inbetween=,	%command
  after={\blank[.5ex]},	%command
  left={(},	%text
  right={)},	%text
%beforehead	command
%afterhead	command
%headstyle=boldslanted, %normal bold slanted boldslanted type cap small... command
%marstyle=boldslanted, %normal bold slanted boldslanted type cap small... command
%symstyle=boldslanted, %normal bold slanted boldslanted type cap small... command
  stopper=,	%text
%n	number
%  symbol=1,	%number
%align	left right normal
  indenting=next,	%never not no yes always first next
  indentnext=auto,	%yes no
]
\setupitemgroup[IG][2]
[2, packed,joinedup,intext][
  leftmargin=4em,	%no standard dimension
  %width=2em,	%dimension
  before=,	%command
  inbetween=,	%command
  after=,	%command
%  symbol=2,
  indenting=next,
  indentnext=auto,
]

\setupitemgroup[IG][each][][leftmargin=2em]
%m	A numbered list, with lowercase (“medieval”, aka “oldstyle”) numbers.
%1 … 8	Different kinds of bullets. All items get the same symbol.
%a	Items are numbered a., b., c., …
%A	Items are numbered A., B., C., …
%AK	Items are numbered A., B., C., …, in small caps.
%r	Items are numbered in lowercase Roman numerals.
%R	Items are numbered in uppercase Roman numerals.
%KR	Items are numbered in uppercase Roman numerals, small caps style.

% with number
\defineitemgroup[igNum][levels=2]
\setupitemgroup[igNum]
[1]
[a, packed,joinedup,intext]
[
  leftmargin=2em,	%no standard dimension
  %width=2em,	%dimension
  before=,	%command
  inbetween=,	%command
  after={\blank[.5ex]},	%command
  indenting=next,
  indentnext=auto,
]
\setupitemgroup[igNum]
[2]
[a, packed,joinedup,intext]
[
  leftmargin=4em,	%no standard dimension
  %width=2em,	%dimension
  before=,	%command
  inbetween=,	%command
  after={\blank[.5ex]},	%command
  indenting=next,
  indentnext=auto,
]

\setupformulae[%
%location	left right
%left	text
%right	text
%align	flushleft middle flushright
%option	middle
%strut	yes no
%distance	dimension
%margin	dimension standard yes no
%leftmargin	dimension
%rightmargin	dimension
  indentnext=auto,	%yes no
%alternative	name
%spacebefore	dimension
%spaceafter	dimension
%separator	text
%conversion	numbers characters Characters romannumerals Romannumerals text
]

\define[1]\refformula{%
\in{公式}{}[formula:#1]%
}

\define[1]\TODO{#1}

\definemathmatrix[pmatrix]%
[left={\left(\,},right={\,\right)}]

\stopmodule
\endinput

